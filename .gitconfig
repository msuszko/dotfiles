# https://github.com/yuanyan/gitter/blob/master/.gitconfig
[alias]
    #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    recent-branches = !git for-each-ref --count=5 --sort=-committerdate refs/heads/ --format='%(refname:short)'
    ci = commit
    amend = commit --amend            # ammend your last commit
    ammend = commit --amend           # ammend your last commit
    co = checkout
    cp = cherry-pick -x # grab a change from a branch

    # log
    l = log --graph --date=short --decorate=full

    # remote
    r = remote -v # show remotes (verbose)
    remotes = remote -v

    # list
    ls = ls-files
    ign = ls-files -o -i --exclude-standard      # Show files ignored by git

    # status
    s = status -s                     # View the current working tree status using the short format
    st = status                       # status
    stat = status                     # status

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and
    # all kinds of trailing whitespace as an error.
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of
    # a line
    whitespace = space-before-tab,tab-in-indent,trailing-space
    quotepath = false
    commitGraph = true
[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
    ui = auto
[color "branch"]
    current = blue reverse
    local = red
    remote = black
[color "diff"]
    meta = red bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[user]
    name = Michał Suszko
    email = michal.suszko@dry.pl

[push]
    default = matching
[gitreview]
    username = msuszko
    remote = origin
[status]
    submoduleSummary = true
[gc]
    writeCommitGraph = true
[pull]
    rebase = true
[diff]
    renameLimit = 3000
[merge]
    tool = nvimdiff
